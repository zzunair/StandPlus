<!-- snippets/wholesale-giftcodes-get-options.liquid -->
{%- if settings.product_info_show_title -%}
  <div class="product-page-info__title mb-15 text-center">
      <h1 class="m-0">{{ title }}</h1>
  </div>
{%- endif -%}
{%- assign tags = customer.tags | join: ',' | downcase -%}
{%- if tags contains 'wholesale' -%}
  <div id="wholesale-form" class="m-0">
    <input type="hidden" name="variant_id" value="{{ current_variant.id }}" data-js-product-variant-input>
    <div class="product-page-info__variants mb-15 d-none">
      {% include 'product-get-variants' with product: product current_variant: current_variant show_custom_options: settings.product_show_custom_options %}
    </div>
    {%- unless product.has_only_default_variant -%}
      <div class="product-page-info__options">
          {%- unless is_quick_view -%}
              {%- assign trigger_id = 'footbar' -%}
          {%- endunless -%}
          {% include 'product-get-options' with options_type: 2 centered: centered options_show_title: false change_history: change_history %}
      </div>
    {%- endunless -%}
    <div class="d-flex cart-buttons">
      <div>
        <table id="totals" class="wtotals">
          <tr>
            <td><h5 class="mb-3 no-letter-spacing">{{ 'wholesale.bulk.quantity' | t }}</h5></td>
            <td><h5 id="wholesalePageQty" class="totalQty mb-0 no-letter-spacing">
              <div class="product-page-info__field product-page-info__quantity">
                  <div class="input-quantity input-quantity--type-04 d-flex align-items-center position-relative mr-10"{% if quantity_connect %} data-js-quantity-connect="{{ quantity_connect }}"{% endif %}>
                      <div class="d-flex flex-center position-absolute left-0 ml-10 cursor-pointer" data-control="-"><i>{% render 'icon-theme-189' %}</i></div>
                      <input type="text" class="mb-0 px-35 text-center quantity" name="quantity" value="1" autocomplete="off">
                      <div class="d-flex flex-center position-absolute right-0 mr-10 cursor-pointer" data-control="+"><i>{% render 'icon-theme-188' %}</i></div>
                  </div>
              </div>
            </h5></td>
          </tr>
          <tr>
            <td>
              <h5 class="mb-3 no-letter-spacing">{{ 'wholesale.bulk.fullprice' | t }}</h5>
            </td>
            <td>
              <h5 id="wholesalePrice" class="mb-0 no-letter-spacing">{% include 'product-get-price' with show00:true %}</h5>
            </td>
          </tr>    
          <tr>
            <td>
              <h5 class="mb-3 no-letter-spacing">{{ 'wholesale.bulk.subtotal' | t }}</h5>
            </td>
            <td>
              <h5 id="wholesaleSubtotal" class="mb-0 no-letter-spacing">{{ cart.total_price | money }}</h5>
            </td>
          </tr>
          <tr>
            <td>
              <h5 class="mb-3 no-letter-spacing">{{ 'wholesale.bulk.discount' | t }}<span id="discountPercent"> ( 0%)</span></h5>
            </td>
            <td class="pos-relative">
              <h5 id="wholesaleDiscount" class="mb-0 no-letter-spacing">0.00</h5>
            </td>
          </tr>
          <tr class="totalRow">
            <td><h5 class="mb-3 no-letter-spacing">{{ 'wholesale.bulk.total' | t }}</h5></td>
            <td><h5 id="wholesaleTotal" class="mb-0 no-letter-spacing float-right">--</h5></td>
          </tr>
          <tr>
            <th colspan="2" class="popup-cart__buttons pt-20">
            <div class="w-100">
              <div class="product-page-info__button-add-to-cart mb-5">
                <button id="submit" type="submit" class="checkout-button btn{% if settings.product_info_button_add_to_cart_size == 'large' %} btn--size-large{% endif %} btn--full btn--status" name="add" {% unless current_variant.available %} disabled="disabled" data-button-status="sold-out"{% elsif variant_pre_order %} data-button-status="pre-order"{% else %}{% if enable_select_variant_button %} data-button-status="select" data-button-select-disable{% endif %}{% endunless %}>
                    <span class="d-flex flex-center"><span class="btn__text checkout-button">{{ 'cart.general.checkout' | t }}</span></span>
                    <span class="d-flex flex-center" data-button-content="sold-out">{{ 'products.product.add_to_cart.sold_out' | t }}</span>
                </button>
              </div>
            </div>
            </th>
          </tr>
          <tr class="d-none cart-warning m-0">
            <th colspan="2" class="m-0 pl-20 pr-20">*Items already in the cart will be removed when checking out from this page</th>
          </tr>
        </table>
      </div>
    </div>
  </div>
  <div id="warningModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <h5 class="h5">WARNING:</h5>
      <p>Your cart already contains some items.</p>
      <p>We recommend that you clear the cart before purchasing giftable codes.</p>
      <button
        id="clearCart"
        type="button"
        onclick="wholesaleClear(event)"
        class="btn btn--primary d-flex ml-auto mr-auto no-letter-spacing"
      >
        <i class="mb-4 mr-4">{%- render 'icon-theme-010' -%}</i>Clear Cart
      </button>
    </div>
  </div>
{%- else -%}
<div>
  {% render 'wholesale-loggedin' with apply: true %}
</div>
{%- endif -%}

<script>
  const pdc_debug = true;

  const form = document.querySelector('div#wholesale-form');
  const inputs = form.querySelectorAll(".input-quantity input");
  const formCartQty = form.querySelector("#wholesaleCartQty");

  const checkoutButton = form.querySelector( "#submit");
  const wholesaleSubtotal = form.querySelector("#wholesaleSubtotal");
  const wholesaleDiscount = form.querySelector("#wholesaleDiscount");
  const wholesaleTotal = form.querySelector("#wholesaleTotal");
  const discountPercent = form.querySelector("#discountPercent");
  const wholesalePrice = form.querySelector("#wholesalePrice");
  let price = form.querySelector("#wholesalePrice .price span");

  const priceObserver = new MutationObserver((mutationsList) => {
    for (let mutation of mutationsList) {
      if (mutation.type === 'childList' && mutation.target === wholesalePrice) {
        price = wholesalePrice.querySelector(".price span");
        console.log('new price:', price.innerText, mutation);
        getTotals();
        updateDiscount();
      }
    }
  });
  
  const config = { childList: true };
  priceObserver.observe(wholesalePrice, config);

  {% render 'wholesale-get-discount' %}

  let quantity = 1;
  let subtotal = 0;
  let code = "";
  inputs.forEach(input => {
    input.addEventListener('input', () => {changeQuantity(input, 0)});
    input.previousElementSibling.addEventListener('click', () => {changeQuantity(input, -1)});
    input.nextElementSibling.addEventListener('click', () => {changeQuantity(input, 1)});
  })
 
  checkoutButton.addEventListener('click', () => {
    console.log("checkout clicked", code, quantity);
    checkoutButton.setAttribute("disabled", true);
    if (code) {
      fetch("/discount/" + code) 
      .then((response) => {
        console.log("fetch response:", response);
        checkout();
      });
    } else checkout();
  })

  function checkout() {
    const variantId = document.querySelector("#wholesale-form input[name='variant_id']").value;
    window.location.href = "https://www.weargales.com/cart/" + variantId + ":" + quantity + "?checkout ";
  }

  function changeQuantity(input, change) {
      console.log("ChangeQuantity:", input.value, input, change);
      if (input.value.includes("-")) change = -1;
      if (input.value.includes("+")) change = 1;
      let newValue = input.value.replace(/[^0-9.]/g, '') * 1 + change;
      console.log("newValue:", newValue);
      if (newValue <= 1) newValue = "1";
      input.value = newValue;
      quantity = newValue;
      getTotals();
      updateDiscount();
  }
  function updateDiscount() {
    console.log("In updateDiscount", subtotal);
    code = ""
    let discountPcnt = 0;
    let discountAmount = 0;
    let total = subtotal;
    for (const dcode of defaultDiscounts) {
        if (quantity >= dcode.minQty) {
            code = dcode.code;
            discountPcnt = dcode.discountPercent;
            discountAmount = (total * (discountPcnt / 100));
            total = subtotal - discountAmount;
            break;
        }
    }
    console.log("found discount:", code, discountPcnt, subtotal, discountAmount, total);
    
    wholesaleDiscount.innerText = String.fromCharCode("8211") +   // 8211 = n-dash
          new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(discountAmount);
    wholesaleTotal.innerText = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(total);
    const spacer = discountPcnt < 10 ? " " : "";
    discountPercent.innerText = " (" + spacer + parseInt(discountPcnt) + "%)";
  }

  function getTotals() {
      console.log("In getTotals", price, price.innerText);
      const priceValue = price.innerText == "" 
        ? {{ price | money_without_currency }}
        : Number(price.innerText.replace(/[^0-9\.,-]+/g,""));
      console.log("price:", priceValue, "quantity:", quantity);
      subtotal = quantity * priceValue;
      wholesaleSubtotal.innerText =
          new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(subtotal);
  }

  let firstLoad = true;
  let warningEnable = false;

  const modalWarning = document.querySelector("#warningModal");
  const cartWarning = document.querySelector("#wholesale-form .cart-warning");
  const modalWarningClose = modalWarning.querySelector(".close");
  const fixBody = document.querySelector("body");

  modalWarningClose.onclick = function() {
      modalWarning.style.display = "none";
      fixBody.classList.remove("no-scroll");
  }
  window.onclick = function(event) {
      if (event.target == modalWarning && modalWarning.style.display == "block") {
        modalWarning.style.display = "none";
        fixBody.classList.remove("no-scroll");
      }
  }
  function cartCountWarning() {
      const cartItemCount = theme && theme.Cart ? theme.Cart.currentData.item_count : {{ cart.item_count }}
      console.log("cartItemCount: ", cartItemCount);
      if (cartItemCount > 0 && firstLoad) {
          modalWarning.style.display = "block";
          cartWarning.classList.remove("d-none");
          warningEnable = true;
          console.log("show cart warnings");
          fixBody.classList.add("no-scroll");
      }
      firstLoad = false;
  }
  function wholesaleClear(e) {
      fetch("{{ routes.root | append: routes.cart_clear_url | append: '.js' }}", {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        }
      })
      .then(response => {
        if (e != "noreload") location.reload();
        return response.json();
      })
      .catch((error) => {
        console.error('Error:', error);
      });
  }

  document.addEventListener('keydown', (event) => {
    console.log("keydown:", event)
      const keyName = event.key;
      if (event.target.tagName == "INPUT" && event.target.classList.contains("quantity")) {
        if (keyName === 'ArrowUp') {
          changeQuantity(event.target.parentNode.querySelector('input.quantity'), 1)
        } else if (keyName === 'ArrowDown') {
            changeQuantity(event.target.parentNode.querySelector('input.quantity'), -1)
        }
      }
  }, false);


  quantity = 1;
  getTotals();
  updateDiscount();
  cartCountWarning();
  
</script>
<style>
  .pos-relative {
      position: relative;
  }
  span#discountPercent {
    min-width: 60px;
    display: inline-block;
  }
  @media (max-width: 767px) {
      #wholesale-form .cart-buttons {
          display: block !important;
      }
  }
  #wholesale-form table {
    margin-left: auto;
    margin-right: auto;
  }
  #wholesale-form .input-quantity {
    margin-right: 0 !important;
    margin-left: auto;
  }
  table.wtotals tbody tr:first-child {
    vertical-align: baseline;
  }
  #wholesale-form .wtotals {
      text-align: right;
  }
  #wholesale-form .cart-buttons {
      flex-wrap: wrap;
      width: 100%;
  }
  #wholesale-form .cart-buttons > div {
      flex: 1;
      padding-top: 10px;
      padding-bottom: 10px;
      margin-left: auto;
      margin-right: auto;
      width: fit-content;
  }
  #wholesale-form .wtotals td:first-child {
      margin-right: 50px;
      display: block;
  }
  #wholesale-form .wtotals td:last-child {
      min-width: 100px;
  }
  .totalRow {
      border-top: 2px solid var(--theme-head-c);
  }
  .cart-warning th {
    color: red; 
    text-align:center; 
    font-weight: normal !important;
  }
</style>
